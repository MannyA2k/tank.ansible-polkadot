---

- name: "Make directory structure"
  tags:
    - prod
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ bc_path_config }}"
    - "{{ bc_path_state }}"


- name: "Load keys file"
  tags:
    - prod
  template:
    src: "nodekeys/keys.txt.j2"
    dest: "{{ bc_path_general }}/keys.txt"


- name: "Start {{ bc_name }}-{{ bc_component_name }} container"
  tags:
    - prod
  register: "{{ bc_name }}_{{ bc_component_name }}"
  docker_container:
    name: "{{ bc_name }}-{{ bc_component_name }}"
    image: "{{ bc_polkadot_image }}"
    command: |
      /usr/local/bin/polkadot -d /state
      --chain=bench --validator --ws-external --rpc-external
      --bootnodes "/ip4/{{ bc_boot_ip[0] }}/tcp/30333/p2p/QmXS53cQyDRT7RaXiKYLjfkX8xSc9pBDPohDh1F3HxzjAz"
    hostname: "{{ bc_name }}-{{ bc_component_name }}"
    network_mode: host
    volumes:
      - "{{ bc_path_state }}:/state"
      - "/tmp/cores:/tmp/cores"
    stop_timeout: 600
    pull: true
    env:
      EXTRA_VALIDATORS: "{{ bc_peers_ip|length - 1 }}"

- name: "Check health producer"
  uri:
    url: "http://localhost:9933"
    method: POST
    body: '{"jsonrpc":"2.0", "method":"rpc_methods", "params": []}'
    body_format: json
    status_code: 200
  register: check_producer
  retries: 10
  delay: 5
  until: check_producer is success
  tags:
    - prod

- name: "Get producer grandpa key"
  tags:
    - prod
  shell: |
    sed -n $(expr {{ bc_polkadot_extra_validator_id }} \* 7 + 2),$(expr {{ bc_polkadot_extra_validator_id }} \* 7 + 3)p\
     {{ bc_path_general }}/keys.txt | tr '\n' ' '| awk '{ printf "gran, %s, %s", $1, $2 }'
  register: producer_grandpa_key

- name: "Get producer babe key"
  tags:
    - prod
  shell: |
    sed -n $(expr {{ bc_polkadot_extra_validator_id }} \* 7 + 4),$(expr {{ bc_polkadot_extra_validator_id }} \* 7 + 5)p\
     {{ bc_path_general }}/keys.txt | tr '\n' ' '| awk '{ printf "babe, %s, %s", $1, $2 }'
  register: producer_babe_key

- name: "Get producer imonline key"
  tags:
    - prod
  shell: |
    sed -n $(expr {{ bc_polkadot_extra_validator_id }} \* 7 + 6),$(expr {{ bc_polkadot_extra_validator_id }} \* 7 + 7)p\
     {{ bc_path_general }}/keys.txt | tr '\n' ' '| awk '{ printf "imon, %s, %s", $1, $2 }'
  register: producer_imonline_key

- name: "Set producer grandpa key"
  uri:
    url: "http://localhost:9933"
    method: POST
    body: '{"jsonrpc":"2.0", "method":"author_insertKey", "params": ["{{ producer_grandpa_key }}"], "id":1}'
    body_format: json
    status_code: 200
  tags:
    - prod

- name: "Set producer babe key"
  uri:
    url: "http://localhost:9933"
    method: POST
    body: '{"jsonrpc":"2.0", "method":"author_insertKey", "params": ["{{ producer_babe_key }}"], "id":2}'
    body_format: json
    status_code: 200
  tags:
    - prod

- name: "Set producer imonline key"
  uri:
    url: "http://localhost:9933"
    method: POST
    body: '{"jsonrpc":"2.0", "method":"author_insertKey", "params": ["{{ producer_imonline_key }}"], "id":3}'
    body_format: json
    status_code: 200
  tags:
    - prod

- name: "Restart the node to apply keys"
  tags:
    - prod
  shell: docker restart "{{ bc_name }}-{{ bc_component_name }}"

- name: "Check health producer after restart"
  uri:
    url: "http://localhost:9933"
    method: POST
    body: '{"jsonrpc":"2.0", "method":"rpc_methods", "params": []}'
    body_format: json
    status_code: 200
  register: check_producer_after_reboot
  retries: 10
  delay: 5
  until: check_producer_after_reboot is success
  tags:
    - prod

- name: "Start {{ bc_name }}-{{ bc_component_name }}-metrics container"
  docker_container:
    name: "{{ bc_name }}-{{ bc_component_name }}-metrics"
    image: "{{ bc_polkadot_exporter_image }}"
    command: --exporter_port "{{ bc_polkadot_node_metrics_port }}"
    hostname: "{{ bc_name }}-{{ bc_component_name }}-metrics"
    network_mode: host
    stop_timeout: 600
    pull: true


- name: List data about prod container
  debug:
    var="{{ bc_name }}_{{ bc_component_name }}"
  tags:
    - never
    - debug

